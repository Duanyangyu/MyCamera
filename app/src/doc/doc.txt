
/*************************2017.09.10*****************************/
一.Git使用
    1) 文件右键commit
    2) 工具栏 VCS -> Git -> Push

二.预览 Camera 总结
1.GLSurfaceView 预览 Camera
SurfaceTexture texture = new SurfaceTexture(int textureId);
camera.setPreviewTexture(SurfaceTexture texture);

2.SurfaceView 预览 Camera
camera.setPreviewDisplay(SurfaceHolder holder);

3.TextureView 预览 Camera
camera.setPreviewTexture(SurfaceTexture texture);

4.GLSurfaceView 预览 Camera
     1)Camera --> SurfaceTexture --> Texture --> GLRender --> GLSurfaceView
     2)使 Camera 的数据与显示分离
     3)SurfaceTexture是数据与显示之间的桥梁。

三.相机预览内容继续绘制贴纸层
TODO～～

/*************************2017.09.25*****************************/
四.OpenGL渲染流程
1.绘制流程理解：
    1) 顶点着色器负责将用户指定的顶点转换为内部表示，片元着色器决定最终的颜色显示。
    2）用户在程序中指定、加载顶点数据；
    3）将顶点数据传递给GPU，由顶点着色器处理顶点数据；
    4）片元着色器负责最终颜色。

2.Frame Buffer Object(FBO)：用于把数据渲染到纹理对像。

/*************************2017.09.30*****************************/
1.Cube有问题，纹理映射崩溃。检查draw流程。
2.应该将纹理图，映射到立方体的六个面。


/*************************2017.10.10*****************************/
1.Cube绘制出立方体，并且实现纹理映射。
2.上一次没有正确映射纹理，是因为一个低级错误，纹理坐标设置错误。

/*************************2017.10.11*****************************/
1.seekbar拖动改变ViewMatrix和ProjectionMatrix
2.目标：将立方体绘制进相机预览页面。

/*************************2017.10.13*****************************/
1.试图在相机预览层之上，绘制立方体。未果！
2.应该是纹理Id传递的问题。

/*************************2017.10.16*****************************/
1.离屏渲染：使用FrameBuffer，绘制一张图片。

/*************************2017.10.18*****************************/
1.使用FrameBuffer绘制出了两张叠加的图片。BufferGLSurfaceview.java
2.Camera预览层之上绘制了一张图片
3.Camera预览层之上绘制立方体，但是还不够完善，应该：
    1）立方体的深度渲染有问题
    2）立方体周围的黑色区域应该去掉。
4.遇到的问题：glActiveTexture方法理解有问题！

5.使用 AudioRecord 完成音频数据的采集，并实现写音频 wav 文件.(未完成！)














